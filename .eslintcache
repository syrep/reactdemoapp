[{"/home/joe/Documents/syrep Github/reactdemoapp/src/App.js":"1","/home/joe/Documents/syrep Github/reactdemoapp/src/index.js":"2","/home/joe/Documents/syrep Github/reactdemoapp/src/AxiosPart/Users.js":"3","/home/joe/Documents/syrep Github/reactdemoapp/src/AxiosPart/UsersModify.js":"4","/home/joe/Documents/syrep Github/reactdemoapp/src/FunctionalPart/Hello.js":"5","/home/joe/Documents/syrep Github/reactdemoapp/src/DynamicPart/Dynamic.js":"6","/home/joe/Documents/syrep Github/reactdemoapp/src/HooksPart/Hooks.js":"7","/home/joe/Documents/syrep Github/reactdemoapp/src/reportWebVitals.js":"8"},{"size":1383,"mtime":1606648028624,"results":"9","hashOfConfig":"10"},{"size":500,"mtime":1606365824646,"results":"11","hashOfConfig":"12"},{"size":519,"mtime":1606636848035,"results":"13","hashOfConfig":"10"},{"size":826,"mtime":1606371913226,"results":"14","hashOfConfig":"12"},{"size":741,"mtime":1606629124559,"results":"15","hashOfConfig":"12"},{"size":3049,"mtime":1606643071383,"results":"16","hashOfConfig":"10"},{"size":1602,"mtime":1607157907305,"results":"17","hashOfConfig":"12"},{"size":362,"mtime":1606365824646,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ojchdw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"njlbo4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joe/Documents/syrep Github/reactdemoapp/src/App.js",[],"/home/joe/Documents/syrep Github/reactdemoapp/src/index.js",[],"/home/joe/Documents/syrep Github/reactdemoapp/src/AxiosPart/Users.js",[],"/home/joe/Documents/syrep Github/reactdemoapp/src/AxiosPart/UsersModify.js",[],"/home/joe/Documents/syrep Github/reactdemoapp/src/FunctionalPart/Hello.js",[],"/home/joe/Documents/syrep Github/reactdemoapp/src/DynamicPart/Dynamic.js",["37"],"import React, { Component } from \"react\";\n\n//below is a list of users/entities that can be selected from\nconst dynuser = [\n\t{\n\t\tname: \"john\",\n\t\tage: \"17\",\n\t\tvideo: \"https://www.youtube.com/watch?v=1TYObnD0RCA\",\n\t},\n\t{\n\t\tname: \"john2\",\n\t\tage: \"72\",\n\t\tvideo: \"https://www.youtube.com/watch?v=6aPZR3qAIXg\",\n\t},\n\t{\n\t\tname: \"johnw\",\n\t\tage: \"47\",\n\t\tvideo: \"https://www.youtube.com/watch?v=Qqgm170PZwk\",\n\t},\n\t{\n\t\tname: \"state\",\n\t\tage: \"0\",\n\t\tvideo: \"https://stackoverflow.com/questions/57373072/state-is-not-defined\",\n\t},\n];\n\n//below is the class that contains state (functional class) and the render method which allows us to display the username, and links to what displays it\nexport default class DynUser extends Component {\n\tstate = {\n\t\tchosenDynUser: \"\",\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t//display the usernames if we want to from the comment block below\n\t\t\t<div>\n\t\t\t\t{/* {dynuser.map((user) => (\n\t\t\t\t\t<p key={user.name}>\n\t\t\t\t\t\tName: {user.name} Video: {user.video}\n\t\t\t\t\t</p>\n\t\t\t\t))} */}\n\t\t\t\t{this.selectDynUser()} {/* displays the select method */}\n\t\t\t\t{this.selectedDynUser(this.state.chosenDynUser)}\n\t\t\t\t{/* displays the selected information */}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/*below has the select method */\n\tselectDynUser() {\n\t\tconsole.log(this.state.chosenDynUser); //this logs what is currently selected to console\n\t\t//Please note that the state(chosenDynUser) is no longer an array, so it cannot be used to map and extract data\n\t\treturn (\n\t\t\t<select\n\t\t\t\tonChange={(e) => [this.setState({ chosenDynUser: e.target.value })]}\n\t\t\t>\n\t\t\t\t<option>Select a name for more information</option>\n\t\t\t\t{dynuser.map((user) => (\n\t\t\t\t\t<option key={user.name}>{user.name}</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t);\n\t}\n\n\tselectedDynUser(chosenDynUser) {\n\t\tif (!chosenDynUser) return <p>No name is selected, please choose a name</p>;\n\n\t\t// need to convert state to string or something, then use it to get the row from the array\n\t\t//console.log(dynuser[3].name); //this is how you log what you select the index of the object (to get the right array) and then select the array component required\n\n\t\tconst samegs = chosenDynUser.toString();\n\t\t//console.log(\"name:\", { samegs });\n\n\t\tconst moreInfoDynUser = dynuser\n\t\t\t.filter((selectedUser) => selectedUser.name == samegs)\n\t\t\t.map((filteredName) => (\n\t\t\t\t<p key={filteredName}>\n\t\t\t\t\tName: {filteredName.name} <br /> Age: {filteredName.age} <br /> Video:{\" \"}\n\t\t\t\t\t<a href={filteredName.video}>Link</a>\n\t\t\t\t</p>\n\t\t\t));\n\n\t\treturn <span>{moreInfoDynUser}</span>;\n\t}\n}\n\n// https://stackoverflow.com/questions/63764175/key-value-pair-string-generation-out-of-an-array-react-js\n// the above link shows how to join array values together into specific formats\n\n// https://stackoverflow.com/questions/39270107/finding-an-object-in-array-and-taking-values-from-that-to-present-in-a-select-li\n// https://upmostly.com/tutorials/react-filter-filtering-arrays-in-react-with-examples\n// the above links are for filter & find within arrays\n\n// https://www.robinwieruch.de/react-state-array-add-update-remove\n// the above link helps conceptualize arrays\n","/home/joe/Documents/syrep Github/reactdemoapp/src/HooksPart/Hooks.js",["38"],"import { useState } from \"react\";\nimport \"./Hooks.css\";\n\n//first hook will be the mapping one, then need one that can be used as a boolean\n// https://www.youtube.com/watch?v=mxK8b99iJTg\n//for the first hook\n// https://www.youtube.com/watch?v=O6P86uwfdR0\n//for the second hook\n\n//need a function component to use hook, classes use \"state\" instead\n//hooks need to execute in the same order, so we can't use if statements for them\nexport default function Hooks() {\n  const [countState, setCountState] = useState(0);\n  //default value is placed in the useState brackets\n\n  function increaseCount() {\n    //setCountState(countState + 1);\n    //this way shouldn't be used, as if it were to be repeated, it would use the old countState because the function\n    // hasn't finished, so the state doesn't appear changed. It would then be the same equation and answer\n\n    setCountState((oldCount) => oldCount + 1);\n    //this allows you to re-render the function, in the event you need to call the setCountState function again\n    //this uses the function method of setting state, similar to classes, as it passes in the state object as a number\n    // then updates it, so when the next setCountState tries to run, it uses the updated number\n  }\n\n  function decreaseCount() {\n    setCountState((oldCount) => oldCount - 1);\n  }\n\n  return (\n    <div>\n      <button onClick={increaseCount}>Up</button>\n      <span className=\"counter\">{countState}</span>\n      <button onClick={decreaseCount}>Down</button>\n    </div>\n  );\n}\n\nfunction HookComp({ hook, index }) {\n  return <div className=\"hello\">{hook.text}</div>;\n}\n","/home/joe/Documents/syrep Github/reactdemoapp/src/reportWebVitals.js",[],{"ruleId":"39","severity":1,"message":"40","line":75,"column":48,"nodeType":"41","messageId":"42","endLine":75,"endColumn":50},{"ruleId":"43","severity":1,"message":"44","line":40,"column":10,"nodeType":"45","messageId":"46","endLine":40,"endColumn":18},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'HookComp' is defined but never used.","Identifier","unusedVar"]